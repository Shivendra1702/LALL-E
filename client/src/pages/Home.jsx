import React, { useState, useEffect } from "react";
import { Card, FormField, Loader } from "../components";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-4 font-bold text-xl uppercase text-[#6469ff]">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchedPosts, setSearchedPosts] = useState([]);

  const handleSearchChange = (e) => {
    setSearchText(e.target.value);
    const results = allPosts.filter((post) => {
      return (
        post.prompt.toLowerCase().includes(searchText.toLowerCase()) ||
        post.name.toLowerCase().includes(searchText.toLowerCase())
      );
    });
    setSearchedPosts(results);
  };

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setLoading(true);
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  return (
    <section className="max-w-full mx-auto">
      <div>
        <h1 className="font-bold text-[32px] text-[#222328]">
          The Community ShowCase
        </h1>
        <p className="mt-2 text-[16px] text-[#666e75] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by LALL-E
        </p>
      </div>

      <div className="mt-10">
        <FormField
          LabelName="Search Posts"
          type="text"
          placeholder="Search"
          name="text"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-xl text-[#666e75] mb-3">
                Showing Search Results For :{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedPosts}
                  title="No Search Results Found!"
                />
              ) : (
                <RenderCards data={allPosts} title="No Posts Found!" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
