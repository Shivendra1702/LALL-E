import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

import { preview } from "../assets";
import { FormField, Loader } from "../components";
import { getRandomPrompt } from "../utils";

const CreatePost = () => {
  const navigate = useNavigate();
  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);
  const [form, setForm] = useState({
    name: "",
    prompt: "",
    photo: "",
  });

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch("http://localhost:8080/api/v1/lalle", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            prompt: form.prompt,
          }),
        });

        const data = await response.json();
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
      } catch (err) {
        alert(err);
      } finally {
        setGeneratingImg(false);
      }
    } else {
      alert("Please provide proper prompt");
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (form.name && form.prompt && form.photo) {
      try {
        setLoading(true);
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(form),
        });
        await response.json();
        console.log(response)
        navigate("/");
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("Please Enter Name , prompt and generate image");
    }
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };

  return (
    <section className="mx-auto max-w-7xl">
      <div>
        <h1 className="font-bold text-[32px] text-[#222328]">Create</h1>
        <p className="mt-2 text-[16px] text-[#666e75] max-w-[500px]">
          Create imaginative and visually stunning images generated by LALL-E
          and Share them with the Community
        </p>
      </div>

      <form className="mt-14 max-w-3xl" onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            LabelName="Your name"
            type="text"
            name="name"
            placeholder="Shivendra Pratap"
            value={form.name}
            handleChange={handleChange}
          />
          <FormField
            LabelName="prompt"
            type="text"
            name="prompt"
            placeholder="A Man falling in Love with his Computer, digital art"
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div
            className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 h-64 p-3 
          flex justify-center items-center
          "
          >
            {form.photo ? (
              <img
                src={form.photo}
                alt={form.photo}
                className="w-full h-full object-contain"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-9/12 h-9/12 object-contain opacity-50"
              />
            )}
            {generatingImg && (
              <div className="absolute flex justify-center items-center inset-0 bg-[rgba(0,0,0,0.3)] rounded-lg">
                <Loader />
              </div>
            )}
          </div>
        </div>

        <div className="mt-6 flex gap-5">
          <button
            type="button"
            onClick={generateImage}
            className="text-center text-white text-sm bg-green-700 font-medium rounded-md py-2 px-4"
          >
            {generatingImg ? "Generating ..." : "Generate"}
          </button>
        </div>

        <div className="mt-10">
          <p className="text-[#666e75] text-[14px]">
            You have Created the image you want, you can share it with Others In
            the Community
          </p>
          <button
            onClick={handleSubmit}
            type="button"
            className="text-center text-white text-sm bg-[#6469ff] font-medium rounded-md py-2 px-4 mt-6"
          >
            {loading ? "Sharing ..." : "Share With The community"}
          </button>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;
